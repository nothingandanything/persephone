package com.web.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.web.dao.CartDao;
import com.web.entity.CartItem;
import com.web.util.JDBCUtil;

public class CartDaoImpl implements CartDao {
	/**
	 * 添加购物车
	 */
	@Override
	public boolean addCart(CartItem cartItem) {
		
		// 影响行数的变量
		int count = 0;
		
		try {
			// 获取数据库连接对象
			Connection conn = JDBCUtil.getConnectinon();
			
			// 编写sql
			String sql = "INSERT INTO cartitem(UserID,DrinkID,DrinkSweet,DrinkTemp,DrinkSpec,DrinkPrice,Number)"
					+ "VALUES (?,?,?,?,?,?,?);";

			// 编译sql
			PreparedStatement ps = conn.prepareStatement(sql);
			
			// 设置参数
			ps.setInt(1, cartItem.getUserID());
			ps.setInt(2, cartItem.getDrinkID());
			ps.setString(3, cartItem.getDrinkSweet());
			ps.setString(4, cartItem.getDrinkTemp());
			ps.setString(5, cartItem.getDrinkSpec());
			ps.setFloat(6, cartItem.getDrinkPrice());
			ps.setInt(7, cartItem.getNumber());
			
			// 执行修改
			count = ps.executeUpdate();

			// 关闭
			JDBCUtil.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}

		return count > 0 ? true : false;
	}

	/**
	 * 查看购物车中的饮品
	 */
	@Override
	public List<CartItem> showCart(int UserID) {
		List<CartItem> list = new ArrayList<CartItem>();
		try {
			// 获取数据库连接对象
			Connection conn = JDBCUtil.getConnectinon();
			
			// 编写sql
			String sql = "SELECT * FROM cartitem WHERE UserID = ?";

			// 编译sql
			PreparedStatement ps = conn.prepareStatement(sql);

			// 设置参数
			ps.setInt(1, UserID);
			
			//执行查询
			ResultSet rs = ps.executeQuery();
			
			//循环
			while(rs.next()){
				CartItem c = new CartItem();
				c.setUserID(rs.getInt("UserID"));
				c.setDrinkID(rs.getInt("DrinkID"));
				c.setDrinkSweet(rs.getString("DrinkSweet"));
				c.setDrinkTemp(rs.getString("DrinkTemp"));
				c.setDrinkSpec(rs.getString("DrinkSpec"));
				c.setDrinkPrice(rs.getFloat("DrinkPrice"));
				c.setNumber(rs.getInt("Number"));
				
				// 把购物车对象添加到集合中
				list.add(c);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}
}
